#include <iostream>
using namespace std;

bool nqueen(int* &data, int n, int row) {
	// end
	if (row == n) return true;
	// find col
	for (int i = 0; i < n; i++) {
		bool flag = true;
		for (int j = 0; j < row; j++) {
			// col
			if (data[j] == i) {
				flag = false;
				break;
			}
			// cross
			if (data[row - 1 - j] == i - 1 - j || data[row - 1 - j] == i +1 + j) {
				flag = false;
				break;
			}
		}
		if (flag) {
			data[row] = i;
			bool temp = nqueen(data, n, row + 1);
			if (temp) return true;
			data[row] = -1;
			
		}
	}
	return false;
}

int main() {
	int num;
	cin >> num;
	int n;
	for (int cs = 0; cs < num; cs++) {
		cin >> n;
		// init
		int* data = new int[n];
		for (int i = 0; i < n; i++) data[i] = -1;
		nqueen(data, n, 0);
		for (int i = 0; i < n; i++) cout << data[i] + 1 << " ";
		cout << endl;
	}
}
