#include <iostream>
using namespace std;

#define MAX 1001

int main() {
	char str1[MAX];
	char str2[MAX];
	for (int j = 0; j < MAX; j++) {
		str1[j] = ' ';
		str2[j] = ' ';
	}
	cin >> str1 >> str2;
	int len1 = 0, len2 = 0;
	while (str1[len1] != NULL || str1[len1] == '\n') len1++;
	while (str2[len2] != NULL || str2[len2] == '\n') len2++;
	int** dp = new int* [len1 + 1];
	for (int j = 0; j < len1 + 1; j++) {
		dp[j] = new int[len2 + 1];
	}
	for (int j = 0; j <= len1; j++) {
		for (int k = 0; k <= len2; k++) {
			// base
			if (j == 0 || k == 0) {
				dp[j][k] = 0;
			}
			// 증가는 대각선에서만 해야 flag를 쓰지 않음
			else if (str1[j - 1] == str2[k - 1]) {
				dp[j][k] = dp[j - 1][k - 1] + 1;
			}
			else {
				dp[j][k] = max(dp[j - 1][k], dp[j][k - 1]);
			}
		}
	}
	cout << dp[len1][len2] << " ";
}
