#include <iostream>
using namespace std;

#define SZ 4
bool dfs(int data[SZ][SZ], int pos) {
	// end
	if (pos == 16) return true;
	// skip
	if (data[pos / SZ][pos % SZ]) {
		return dfs(data, pos + 1);
	}
	// find num
	int table[4] = { 1, 2, 3, 4 };
	for (int i = 0; i < SZ; i++) {
		bool flag = true;
		// row
		for (int j = 0; j < SZ; j++) {
			if (table[i] == data[pos / SZ][j]) {
				flag = false;
			}
		}
		// col
		for (int j = 0; j < SZ; j++) {
			if (table[i] == data[j][pos % SZ]) {
				flag = false;
			}
		}
		// box
		int pos1 = pos / SZ / 2;
		int pos2 = pos % SZ / 2;
		for (int j = 0; j < SZ; j++) {
			if (table[i] == data[pos1*2+j/2][pos2*2+j%2]) {
				flag = false;
			}
		}
		if (flag) {
			data[pos / SZ][pos % SZ] = table[i];
			bool temp = dfs(data, pos + 1);
			if (!temp) data[pos / SZ][pos % SZ] = 0;
			else return true;
		}
	}
}


int main() {
	int num;
	cin >> num;
	int data[SZ][SZ];
	for (int i = 0; i < num; i++) {
		for (int j = 0; j < SZ; j++) {
			for (int k = 0; k < SZ; k++) {
				cin >> data[j][k];
			}
		}
		dfs(data, 0);
		for (int j = 0; j < SZ; j++) {
			for (int k = 0; k < SZ; k++) {
				cout << data[j][k] << " ";
			}
			cout << endl;
		}
	}
}
